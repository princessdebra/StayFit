import 'package:flutter/material.dart';

import 'package:runfun/widgets/settings/settings_label.dart';
import 'package:runfun/widgets/ui/custom_listtile.dart';

import 'package:runfun/main_notifier.dart';
import 'package:provider/provider.dart';

class OtherTiles extends StatelessWidget {
  const OtherTiles({super.key});

  @override
  Widget build(BuildContext context) {
    AppNotifier notifier = Provider.of<AppNotifier>(context);
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      textDirection: TextDirection.ltr,
      children: [
        const SettingsLabel(text: "Visual options"),
        // Dark mode switcher
        CustomListTile(
          title: "Dark Mode",
          subtitle: "Join the dark side",
          // Interface with viewmodel
          trailing: Switch(
            value: notifier.isDarkMode,
            onChanged: (bool newval) => notifier.setDarkMode(newval),
          ),
        ),
        const SettingsLabel(text: "Other options"),
        // About page generated by Flutter
        CustomListTile(
          title: "About",
          subtitle: "View app information",
          onTap: () {
            showAboutDialog(
              context: context,
              applicationVersion: '1.0.0',
              applicationLegalese: "Press View Licenses to see more information",
              // Add the application icon
              applicationIcon: ClipRRect(
                borderRadius: BorderRadius.circular(30.0),
                child: Image.asset(
                  'assets/icon/final.jpg',
                  semanticLabel: "App Icon",
                  width: 50,
                  height: 50,
                ),
              ),
            );
          },
        ),
        // Logout option
        CustomListTile(
          title: "Logout",
          subtitle: "Sign out of your account",
          // Logout and navigate to home page automatically
          onTap: () => notifier.settingsLogout()
        ),
        // Delete all run data option
        CustomListTile(
          title: "Reset Run data",
          subtitle: "Delete your run data from the server",
          // Make sure the user knows what they are getting into
          onTap: () => confirmAction(context, notifier.resetUserData),
        ),
      ]
    );
  }

  // Function to confirm whether the user wants to delete all of their run data
  // from the server
  Future<dynamic> confirmAction(BuildContext context, VoidCallback callback) async {
    return showDialog(
    context: context,
    // Display the dialogue
    builder: (context) => AlertDialog(
      title: const Text('Confirm delete'),
      content: const Text('This action will delete all of your previous run data FOREVER. Are you sure you want to continue?'),
      actions: <Widget>[
        // Remove the confirmation if answer is no
        TextButton(
          onPressed: () => Navigator.of(context).pop(),
          child: const Text('No'),
        ),
        // Call the callback if the user is sure
        TextButton(
          onPressed: () => callback(),
          child: const Text('Yes'),
        ),
      ],
    )
  );
  }
}